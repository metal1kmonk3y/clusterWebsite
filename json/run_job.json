{
    "title" : "Running a Job",
    "description" : "This section describes how to run a job. flux uses SLURM for batch scheduling and resource management. See resources for more information about SLURM.\nHigh performance parallel computing codes generally run in 'batch' mode. Batch jobs are controlled by scripts written by the user and submitted to a batch system that manages the compute resource and schedules the job to run based on a set of policies. In general, batch systems work on a first-in, first-out basis, but this is subject to a number of constraints.",

    "sections" :
    [
        {
            "subtitle": "Preparing a batchscript",
            "description_start": "Batch scripts consist of two parts:", 
            "description_end_list_type": "a",
            "description_end" : [ 
                            "a set of directives that describe your resource requirements (time, number of processors, etc.)", 
                            "UNIX commands that perform your computations. These UNIX commands may create directories, transfer files, etc.; anything you can type at a UNIX shell prompt. Batch scripts are submitted to the 'batch system,' where they are queued awaiting free resources.The actual execution of your parallel job, however, is handled by a special command, called a job launcher. In a generic Linux environment, such as flux, this utility is called 'mpirun'.Below is a sample batchscript that launches a parallel job."
            ],
            "display_file" : [
                            "sample.bs",
                            "doc/sample.bs"
            ]
        },
        {
            "subtitle": "More on SLURM",
            "description" : "The following commands can be used on flux to interact with SLURM.",
            "commands_list_type" : "I",
            "commands" : {
                "sinfo" : { 
                            "info" : "Show basic information about the nodes available in the system :",
                            "code" : [
                                    "shell$ sinfo"
                            ]
                },
                 "squeue" : { 
                            "info" : "Show information about the job queue (e.g., which jobs are running, versus queued):",
                            "code" : [
                                    "shell$ squeue"
                            ]
                },
                 "sbatch" : { 
                            "info" : "Submit a batch job. Does not block in the shell, but queues the job for later execution. See example script above for syntax and some common parameters.",
                            "code" : [
                                    "shell$ sbatch mysript.sh"
                            ]
                },
                 "salloc" : { 
                            "info" : "Obtain a slurm allocation to use. Blocks until allocation is available. This is useful if you want to experiment with the allocation interactively. Most users will find this better/easier to use than srun for this purpose.",
                            "code" : [
                                    "# Allocate two nodes from the available pool of nodes",
                                    "shell$ salloc -N 2",
                                    "# The above may block until the resources are available. Once the command returns",
                                    "# then a prompt will be provided for you to interact with the allocation",
                                    "shell$ mpirun hostname | sort | uniq -c",
                                    "8 flux2.cs.uwlax.edu",
                                    "8 flux3.cs.uwlax.edu",
                                    "# when you are all done make sure to exit, which will release the allocation",
                                    "shell$ exit"
                            ]
                },
                 "srun" :{ 
                            "info" : "Run a script interactively or allocate resources for interactive use",
                            "code" : [
                                    "# Allocate two nodes from the available pool of nodes",
                                    "shell$ srun -N 2",
                                    "# Allocate two nodes from the list of nodes provided, when available",
                                    "shell$ srun -N 2 --nodelist=flux2,flux3,flux4"
                            ]
                },
                 "scancel" : { 
                            "info" : "Kill a job by it's Job ID (use squeue to get Job ID).",
                            "code" : [
                                    "shell$ scancel 12345"
                            ]
                }
            }, 
            "display_file" : [ 
                            "common_slurm.txt", 
                            "doc/common_slurm.txt"
            ]
        }
    ]
}